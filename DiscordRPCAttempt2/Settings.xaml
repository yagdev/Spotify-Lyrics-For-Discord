<controls:MicaWindow x:Class="DiscordRPCAttempt2.Settings"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:controls="clr-namespace:MicaWPF.Controls;assembly=MicaWPF"
      xmlns:local="clr-namespace:DiscordRPCAttempt2"
      mc:Ignorable="d" 
      d:DesignHeight="650" d:DesignWidth="800" MinHeight="650" MinWidth="800"
      Title="Lyrics for Discord Rich Presence" Closed="Window_Closed" Background="Transparent" IsVisibleChanged="OnIsVisibleChanged">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="Win11TxtBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"  SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Button11" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="2">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="W11Checkmark" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="2">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#FF343434"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="White"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="#3A3A3A"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#525252"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="DeepSkyBlue"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="DeepSkyBlue"/>
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="GridStuff">
        <Grid.RowDefinitions>
            <RowDefinition Height="56.844"/>
            <RowDefinition Height="48.156"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Label x:Name="TitleLbl" Content="Lyrics for Discord Rich Presence" Margin="10,10,0,10" Foreground="White" FontFamily="Segoe UI Variable Display Semibold" FontSize="20" HorizontalAlignment="Left" Width="604"/>
        <Label Content="Auth Settings" Margin="10,10,10,10" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="1"/>
        <Rectangle Height="48" Grid.Row="2" VerticalAlignment="Top" Margin="10,0,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <Label Content="SP__DC" Margin="20,10,0,0" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="2" HorizontalAlignment="Left" Width="45" Height="28" VerticalAlignment="Top"/>
        <controls:TextBox x:Name="SPDC" Margin="70,7,357,0" Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Top" Foreground="White" TextChanged="TextBox_TextChanged" MaxLines="1"/>
        <controls:Button Content="Set" Style="{StaticResource MicaWPF.Styles.AccentedButton}" HorizontalAlignment="Right" Margin="0,10,20,0" Grid.Row="2" VerticalAlignment="Top" Width="161"  Height="28" Click="Set1_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="🡕 Learn how to get this" HorizontalAlignment="Right" Margin="0,10,186,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Button_Click" FontFamily="Segoe UI Variable Display"/>
        <Rectangle Height="48" Grid.Row="2" VerticalAlignment="Top" Margin="10,53,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <Label Content="Client ID" Margin="20,63,0,0" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="2" HorizontalAlignment="Left" Width="60" Height="28" VerticalAlignment="Top"/>
        <controls:TextBox x:Name="ClientID" Margin="85,60,357,0" Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Top" Foreground="White" MaxLines="1"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="Set" HorizontalAlignment="Right" Margin="0,63,20,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Set2_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="🡕 Learn how to get this" HorizontalAlignment="Right" Margin="0,63,186,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Button2_Click" FontFamily="Segoe UI Variable Display"/>
        <Rectangle Height="48" Grid.Row="2" VerticalAlignment="Top" Margin="10,107,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <Label Content="Client Secret" Margin="20,117,0,0" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="2" HorizontalAlignment="Left" Width="81" Height="28" VerticalAlignment="Top"/>
        <controls:TextBox x:Name="ClientSecret" Margin="106,114,357,0" Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Top" Foreground="White" MaxLines="1"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="Set" HorizontalAlignment="Right" Margin="0,117,20,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Set3_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="🡕 Learn how to get this" HorizontalAlignment="Right" Margin="0,117,186,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Button2_Click" FontFamily="Segoe UI Variable Display"/>
        <Rectangle Height="48" Grid.Row="2" VerticalAlignment="Top" Margin="10,269,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <Label Content="Discord Application ID" Margin="20,279,0,0" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="2" HorizontalAlignment="Left" Width="134" Height="28" VerticalAlignment="Top"/>
        <controls:TextBox x:Name="AppID" Margin="159,276,357,0" Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Top" Foreground="White" MaxLines="1"/>

        <controls:Button x:Name="StartButton" Content="Start" Margin="10,0,10,10" Grid.Row="2" VerticalAlignment="Bottom" Height="28" Click="Start" FontFamily="Segoe UI Variable Display"/>
        <controls:Button x:Name="UpdateButton" Content="Update" Margin="10,0,10,40" Grid.Row="2" VerticalAlignment="Bottom" Height="28" Click="Update" Visibility="Hidden" FontFamily="Segoe UI Variable Display"/>
        <Rectangle Height="97" Grid.Row="2" VerticalAlignment="Top" Margin="10,322,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <controls:ToggleSwitch x:Name="StartBox" Content="Start on app launch" Margin="20,338,20,0" Grid.Row="2" VerticalAlignment="Top" Foreground="White" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" FontFamily="Segoe UI Variable Display"/>
        <controls:ToggleSwitch x:Name="MinimizedBox" Content="Start Minimized" Margin="20,363,20,0" Grid.Row="2" VerticalAlignment="Top" Foreground="White" Checked="CheckBox2_Checked" Unchecked="CheckBox2_Unchecked" FontFamily="Segoe UI Variable Display"/>
        <controls:ToggleSwitch x:Name="StartupCheck" Content="Launch on startup" Margin="20,388,20,0" Grid.Row="2" VerticalAlignment="Top" Foreground="White" Checked="StartupLaunchOn" Unchecked="StartupLaunchOff" FontFamily="Segoe UI Variable Display"/>
        <Rectangle Height="48" Grid.Row="2" VerticalAlignment="Top" Margin="10,161,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <Label Content="Fallback Client ID (Optional)" Margin="20,171,0,0" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="2" HorizontalAlignment="Left" Width="164" Height="28" VerticalAlignment="Top"/>
        <controls:TextBox x:Name="ClientID2" Margin="189,168,357,0" Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Top" Foreground="White" MaxLines="1"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="Set" HorizontalAlignment="Right" Margin="0,171,20,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Set2a_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="🡕 Learn how to get this" HorizontalAlignment="Right" Margin="0,171,186,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Button2_Click" FontFamily="Segoe UI Variable Display"/>
        <Rectangle Height="48" Grid.Row="2" VerticalAlignment="Top" Margin="10,216,10,0" Fill="#FF444444" StrokeThickness="0" Opacity="0.6"/>
        <Label Content="Fallback Client Secret (Optional)" Margin="20,226,0,0" Foreground="White" FontFamily="Segoe UI Variable Display" Grid.Row="2" HorizontalAlignment="Left" Width="184" Height="28" VerticalAlignment="Top"/>
        <controls:TextBox x:Name="ClientSecret2" Margin="209,223,357,0" Grid.Row="2" TextWrapping="NoWrap" VerticalAlignment="Top" Foreground="White" MaxLines="1"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="🡕 Learn how to get this" HorizontalAlignment="Right" Margin="0,226,186,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Button2_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="🡕 Learn how to get this" HorizontalAlignment="Right" Margin="0,279,186,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Button2_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="Set" HorizontalAlignment="Right" Margin="0,226,20,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Set3a_Click" FontFamily="Segoe UI Variable Display"/>
        <controls:Button  Style="{StaticResource MicaWPF.Styles.AccentedButton}" Content="Set" HorizontalAlignment="Right" Margin="0,279,20,0" Grid.Row="2" VerticalAlignment="Top" Width="161"    Height="28" Click="Set4_Click" FontFamily="Segoe UI Variable Display"/>
        <Label x:Name="TitleLbl_Copy" Content="Version" Margin="0,13,10,18" Foreground="White" FontFamily="Segoe UI Variable Display" HorizontalAlignment="Right" Width="119" VerticalContentAlignment="Center"/>
        <Label x:Name="TitleLbl_Copy1" Content="24.1" Margin="0,30,10,3" Foreground="#FFA6A6A6" FontFamily="Segoe UI Variable Display" HorizontalAlignment="Right" Width="119" VerticalContentAlignment="Center" FontSize="10"/>
        <Label x:Name="StatusIcon" Content="&#xe946;" Margin="0,21,129,11" Foreground="White" FontFamily="Segoe Fluent Icons" HorizontalAlignment="Right" Width="25" Height="25" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="16"/>
    </Grid>
</controls:MicaWindow>
